{
  "storage": [
    {
      "astId": 462,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_initialized",
      "offset": 0,
      "slot": "0",
      "type": "t_uint8"
    },
    {
      "astId": 465,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_initializing",
      "offset": 1,
      "slot": "0",
      "type": "t_bool"
    },
    {
      "astId": 2745,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "1",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 3092,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "51",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 2188,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_defaultRoyaltyInfo",
      "offset": 0,
      "slot": "101",
      "type": "t_struct(RoyaltyInfo)2185_storage"
    },
    {
      "astId": 2193,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_tokenRoyaltyInfo",
      "offset": 0,
      "slot": "102",
      "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2185_storage)"
    },
    {
      "astId": 2373,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "103",
      "type": "t_array(t_uint256)48_storage"
    },
    {
      "astId": 780,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_name",
      "offset": 0,
      "slot": "151",
      "type": "t_string_storage"
    },
    {
      "astId": 782,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_symbol",
      "offset": 0,
      "slot": "152",
      "type": "t_string_storage"
    },
    {
      "astId": 786,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_owners",
      "offset": 0,
      "slot": "153",
      "type": "t_mapping(t_uint256,t_address)"
    },
    {
      "astId": 790,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_balances",
      "offset": 0,
      "slot": "154",
      "type": "t_mapping(t_address,t_uint256)"
    },
    {
      "astId": 794,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_tokenApprovals",
      "offset": 0,
      "slot": "155",
      "type": "t_mapping(t_uint256,t_address)"
    },
    {
      "astId": 800,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_operatorApprovals",
      "offset": 0,
      "slot": "156",
      "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
    },
    {
      "astId": 1702,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "157",
      "type": "t_array(t_uint256)44_storage"
    },
    {
      "astId": 1984,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_tokenURIs",
      "offset": 0,
      "slot": "201",
      "type": "t_mapping(t_uint256,t_string_storage)"
    },
    {
      "astId": 2128,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "202",
      "type": "t_array(t_uint256)49_storage"
    },
    {
      "astId": 645,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_paused",
      "offset": 0,
      "slot": "251",
      "type": "t_bool"
    },
    {
      "astId": 750,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "252",
      "type": "t_array(t_uint256)49_storage"
    },
    {
      "astId": 1886,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "301",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 1952,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "351",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 39,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_roles",
      "offset": 0,
      "slot": "401",
      "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
    },
    {
      "astId": 334,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "__gap",
      "offset": 0,
      "slot": "402",
      "type": "t_array(t_uint256)49_storage"
    },
    {
      "astId": 5307,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "contractURI",
      "offset": 0,
      "slot": "451",
      "type": "t_string_storage"
    },
    {
      "astId": 5309,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "baseURI",
      "offset": 0,
      "slot": "452",
      "type": "t_string_storage"
    },
    {
      "astId": 5311,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "totalSupply",
      "offset": 0,
      "slot": "453",
      "type": "t_uint256"
    },
    {
      "astId": 5315,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "marketPlaceAddresses",
      "offset": 0,
      "slot": "454",
      "type": "t_mapping(t_address,t_bool)"
    },
    {
      "astId": 5318,
      "contract": "contracts/GenXNFT.sol:Akhilesh",
      "label": "_tokenIdCounter",
      "offset": 0,
      "slot": "455",
      "type": "t_struct(Counter)2752_storage"
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_uint256)44_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[44]",
      "numberOfBytes": "1408"
    },
    "t_array(t_uint256)48_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[48]",
      "numberOfBytes": "1536"
    },
    "t_array(t_uint256)49_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[49]",
      "numberOfBytes": "1568"
    },
    "t_array(t_uint256)50_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[50]",
      "numberOfBytes": "1600"
    },
    "t_bool": {
      "encoding": "inplace",
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_bytes32": {
      "encoding": "inplace",
      "label": "bytes32",
      "numberOfBytes": "32"
    },
    "t_mapping(t_address,t_bool)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => bool)",
      "numberOfBytes": "32",
      "value": "t_bool"
    },
    "t_mapping(t_address,t_mapping(t_address,t_bool))": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => mapping(address => bool))",
      "numberOfBytes": "32",
      "value": "t_mapping(t_address,t_bool)"
    },
    "t_mapping(t_address,t_uint256)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
      "numberOfBytes": "32",
      "value": "t_struct(RoleData)34_storage"
    },
    "t_mapping(t_uint256,t_address)": {
      "encoding": "mapping",
      "key": "t_uint256",
      "label": "mapping(uint256 => address)",
      "numberOfBytes": "32",
      "value": "t_address"
    },
    "t_mapping(t_uint256,t_string_storage)": {
      "encoding": "mapping",
      "key": "t_uint256",
      "label": "mapping(uint256 => string)",
      "numberOfBytes": "32",
      "value": "t_string_storage"
    },
    "t_mapping(t_uint256,t_struct(RoyaltyInfo)2185_storage)": {
      "encoding": "mapping",
      "key": "t_uint256",
      "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
      "numberOfBytes": "32",
      "value": "t_struct(RoyaltyInfo)2185_storage"
    },
    "t_string_storage": {
      "encoding": "bytes",
      "label": "string",
      "numberOfBytes": "32"
    },
    "t_struct(Counter)2752_storage": {
      "encoding": "inplace",
      "label": "struct CountersUpgradeable.Counter",
      "members": [
        {
          "astId": 2751,
          "contract": "contracts/GenXNFT.sol:Akhilesh",
          "label": "_value",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        }
      ],
      "numberOfBytes": "32"
    },
    "t_struct(RoleData)34_storage": {
      "encoding": "inplace",
      "label": "struct AccessControlUpgradeable.RoleData",
      "members": [
        {
          "astId": 31,
          "contract": "contracts/GenXNFT.sol:Akhilesh",
          "label": "members",
          "offset": 0,
          "slot": "0",
          "type": "t_mapping(t_address,t_bool)"
        },
        {
          "astId": 33,
          "contract": "contracts/GenXNFT.sol:Akhilesh",
          "label": "adminRole",
          "offset": 0,
          "slot": "1",
          "type": "t_bytes32"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(RoyaltyInfo)2185_storage": {
      "encoding": "inplace",
      "label": "struct ERC2981Upgradeable.RoyaltyInfo",
      "members": [
        {
          "astId": 2182,
          "contract": "contracts/GenXNFT.sol:Akhilesh",
          "label": "receiver",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 2184,
          "contract": "contracts/GenXNFT.sol:Akhilesh",
          "label": "royaltyFraction",
          "offset": 20,
          "slot": "0",
          "type": "t_uint96"
        }
      ],
      "numberOfBytes": "32"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    },
    "t_uint8": {
      "encoding": "inplace",
      "label": "uint8",
      "numberOfBytes": "1"
    },
    "t_uint96": {
      "encoding": "inplace",
      "label": "uint96",
      "numberOfBytes": "12"
    }
  }
}
